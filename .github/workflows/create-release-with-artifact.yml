# That workflow:
#   run "test" on each push;
#   run "check-ref-tag" if the trigger was tag, started with "v";
#   run "generate-artifact" if:
#     jobs "test" and "check-ref-tag" were successful,
#     tag is semver (release tag),
#     tag matches with package.json version;
#   run "release" if "generate-artifact" was successful with a file from "generate-artifact";

name: Create Release with artifact

on:
  push:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm run test


  semver-tag-validation:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
    outputs:
      is_valid_semver_tag: ${{ steps.semver-check.outputs.is_valid_semver_tag }}
    steps:
      - name: Check If Tag Follows Semantic Versioning
        id: semver-check
        # The vertical bar (|) is a YAML "literal block scalar" that allows you to write multi-line commands.
        # Otherwise, it is a single line.
        # It preserves line breaks in the commands that follow.
        # Everything is one line, until slash (\), which indicates a breaking line
        run: |
          [[ "${{ github.ref_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]] \
            && IS_VALID_SEMVER_TAG="true" \
            || IS_VALID_SEMVER_TAG="false"
          echo "is_valid_semver_tag=$IS_VALID_SEMVER_TAG" >> $GITHUB_OUTPUT

  generate-artifact:
    needs: [ test, semver-tag-validation ]
    if: needs.semver-tag-validation.outputs.is_valid_semver_tag == 'true'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.package-version.outputs.version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get Version
        id: package-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check If Tag Version Matches Package Version
        id: version-check
        run: |
          TAG_VERSION="${{ github.ref_name }}"   # First get the GitHub variable
          TAG_VERSION="${TAG_VERSION#v}"         # Then manipulate it with Bash
          PACKAGE_VERSION="${{ steps.package-version.outputs.version }}"
          if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "Error: Tag version ($TAG_VERSION) doesn't match package.json ($PACKAGE_VERSION)"
            exit 1
          fi
          echo "âœ… Versions match: Tag version ($TAG_VERSION) matches package.json version ($PACKAGE_VERSION)"

      - name: Package Next.js App
        run: |
          zip -r nextjs-package-v${{ steps.package-version.outputs.version }}.zip . -x "node_modules/*" ".git/*" ".idea/*"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          # "name" parameter = just a label or identifier for the artifact in GitHub's artifact storage system.
          # It doesn't need to match the actual filename.
          name: nextjs-package-v${{ steps.package-version.outputs.version }}
          # "path" = the real filename
          path: nextjs-package-v${{ steps.package-version.outputs.version }}.zip

  release:
    needs: generate-artifact
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: nextjs-package-v${{ needs.generate-artifact.outputs.version }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          generate_release_notes: true
          tag_name: ${{ github.ref }}
          name: Release ${{ needs.generate-artifact.outputs.version }}
          files:
            nextjs-package-v${{ needs.generate-artifact.outputs.version }}.zip